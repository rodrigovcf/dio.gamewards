{"version":3,"file":"Webpack.js","names":["WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","customMessageSocketBroadcaster","clearWebCacheAsync","projectRoot","mode","cacheFolder","path","join","ProjectUtils","logInfo","chalk","dim","fs","remove","_isTargetingNative","includes","process","env","EXPO_WEBPACK_PLATFORM","isTargetingNative","broadcastMessage","message","data","WebpackDevServer","hackyConvertedMessage","sockWrite","sockets","createNativeDevServerMiddleware","port","compiler","forceManifestType","nativeMiddleware","createDevServerMiddleware","logger","getLogger","watchFolders","useExpoUpdatesManifest","middleware","ExpoUpdatesManifestHandler","getManifestHandler","ManifestHandler","use","createSymbolicateMiddleware","attachNativeDevServerMiddlewareToDevServer","server","attachToServer","messageSocketEndpoint","eventsSocketEndpoint","messageSocket","eventsSocket","broadcast","logReporter","LogReporter","reportEvent","attachInspectorProxy","startAsync","options","stopAsync","logError","red","fullOptions","transformCLIOptions","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","config","loadConfigAsync","getAvailablePortAsync","defaultPort","underline","protocol","ProjectSettings","setPackagerInfoAsync","expoServerPort","packagerPort","webpack","devServer","before","originalBefore","bind","app","listen","WebpackEnvironment","HOST","error","onWebpackFinished","host","ip","address","url","originalClose","close","callback","err","finally","location","Promise","res","openAsync","openProjectAsync","compileWebAppAsync","warnings","resolve","reject","run","stats","messages","formatWebpackMessages","errors","_showErrors","_showWarnings","toJson","all","length","XDLError","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","offline","Error","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","choosePortAsync","setMode","BABEL_ENV","NODE_ENV","validateBoolOption","value","defaultValue","isImageEditingEnabled","pwa","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","dev","webpackEnv","console","log","magenta","result","devcert","certificateFor","key","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","isDebugModeEnabled","bgYellow","black","output","optimization","devtoolLineToLine","pathinfo","namedModules","namedChunks","moduleIds","chunkIds","splitChunks","assign","argv","projectWebpackConfig","existsSync","webpackConfig","require","loadDefaultConfigAsync","UrlUtils","constructWebAppUrlAsync","hostType","openBrowserAsync","success","e","Logger","global"],"sources":["../src/Webpack.ts"],"sourcesContent":["import type Log from '@expo/bunyan';\nimport {\n  attachInspectorProxy,\n  createDevServerMiddleware,\n  LogReporter,\n  MessageSocket,\n} from '@expo/dev-server';\nimport { createSymbolicateMiddleware } from '@expo/dev-server/build/webpack/symbolicateMiddleware';\nimport * as devcert from '@expo/devcert';\nimport openBrowserAsync from 'better-opn';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport * as path from 'path';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport {\n  choosePortAsync,\n  ExpoUpdatesManifestHandler,\n  ip,\n  Logger,\n  ManifestHandler,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  WebpackEnvironment,\n  XDLError,\n} from './internal';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\ntype DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  onWebpackFinished?: (error?: Error) => void;\n  forceManifestType?: 'classic' | 'expo-updates';\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  port?: number;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  logger: Log;\n};\n\n// A custom message websocket broadcaster used to send messages to a React Native runtime.\nlet customMessageSocketBroadcaster:\n  | undefined\n  | ((message: string, data?: Record<string, any>) => void);\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\n// Temporary hack while we implement multi-bundler dev server proxy.\nconst _isTargetingNative: boolean = ['ios', 'android'].includes(\n  process.env.EXPO_WEBPACK_PLATFORM || ''\n);\n\nexport function isTargetingNative() {\n  return _isTargetingNative;\n}\n\nexport type WebpackDevServerResults = {\n  server: DevServer;\n  location: Omit<WebpackSettings, 'server'>;\n  messageSocket: MessageSocket;\n};\n\nexport async function broadcastMessage(message: 'reload' | string, data?: any) {\n  if (!webpackDevServerInstance || !(webpackDevServerInstance instanceof WebpackDevServer)) {\n    return;\n  }\n\n  // Allow any message on native\n  if (customMessageSocketBroadcaster) {\n    customMessageSocketBroadcaster(message, data);\n    return;\n  }\n\n  if (message !== 'reload') {\n    // TODO:\n    // Webpack currently only supports reloading the client (browser),\n    // remove this when we have custom sockets, and native support.\n    return;\n  }\n\n  // TODO:\n  // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n  // For now, just manually convert the value so our CLI interface can be unified.\n  const hackyConvertedMessage = message === 'reload' ? 'content-changed' : message;\n\n  webpackDevServerInstance.sockWrite(webpackDevServerInstance.sockets, hackyConvertedMessage, data);\n}\n\nfunction createNativeDevServerMiddleware(\n  projectRoot: string,\n  {\n    port,\n    compiler,\n    forceManifestType,\n  }: { port: number; compiler: webpack.Compiler; forceManifestType?: 'classic' | 'expo-updates' }\n) {\n  if (!isTargetingNative()) {\n    return null;\n  }\n  const nativeMiddleware = createDevServerMiddleware(projectRoot, {\n    logger: ProjectUtils.getLogger(projectRoot),\n    port,\n    watchFolders: [projectRoot],\n  });\n  // Add manifest middleware to the other middleware.\n  // TODO: Move this in to expo/dev-server.\n\n  const useExpoUpdatesManifest = forceManifestType === 'expo-updates';\n\n  const middleware = useExpoUpdatesManifest\n    ? ExpoUpdatesManifestHandler.getManifestHandler(projectRoot)\n    : ManifestHandler.getManifestHandler(projectRoot);\n\n  nativeMiddleware.middleware.use(middleware).use(\n    '/symbolicate',\n    createSymbolicateMiddleware({\n      projectRoot,\n      compiler,\n      logger: nativeMiddleware.logger,\n    })\n  );\n  return nativeMiddleware;\n}\n\nfunction attachNativeDevServerMiddlewareToDevServer(\n  projectRoot: string,\n  {\n    server,\n    middleware,\n    logger,\n    // Expo SDK 44 and lower\n    attachToServer,\n    // React Native +68 -- Expo SDK 45 and higher\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n  }: { server: http.Server } & ReturnType<typeof createNativeDevServerMiddleware>\n) {\n  if (attachToServer) {\n    // Hook up the React Native WebSockets to the Webpack dev server.\n    const { messageSocket, eventsSocket } = attachToServer(server);\n\n    customMessageSocketBroadcaster = messageSocket.broadcast;\n\n    const logReporter = new LogReporter(logger);\n    logReporter.reportEvent = eventsSocket.reportEvent;\n\n    attachInspectorProxy(projectRoot, {\n      middleware,\n      server,\n    });\n  } else {\n    // React Native +68\n    const logReporter = new LogReporter(logger);\n\n    logReporter.reportEvent = eventsSocketEndpoint.reportEvent;\n\n    customMessageSocketBroadcaster = messageSocketEndpoint.broadcast;\n\n    attachInspectorProxy(projectRoot, {\n      middleware,\n      server,\n    });\n  }\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {}\n): Promise<WebpackDevServerResults | null> {\n  await stopAsync(projectRoot);\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red(`Webpack is already running.`));\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const config = await loadConfigAsync(env);\n  const port = await getAvailablePortAsync({\n    projectRoot,\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting Webpack on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n\n  if (isTargetingNative()) {\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      expoServerPort: webpackServerPort,\n      packagerPort: webpackServerPort,\n    });\n  }\n\n  // Create a webpack compiler that is configured with custom messages.\n  const compiler = webpack(config);\n\n  // Create the middleware required for interacting with a native runtime (Expo Go, or a development build).\n  let nativeMiddleware: ReturnType<typeof createNativeDevServerMiddleware> | null = null;\n\n  if (config.devServer?.before) {\n    nativeMiddleware = createNativeDevServerMiddleware(projectRoot, {\n      port,\n      compiler,\n      forceManifestType: options.forceManifestType,\n    });\n    // Inject the native manifest middleware.\n    const originalBefore = config.devServer.before.bind(config.devServer.before);\n    config.devServer.before = (app, server, compiler) => {\n      originalBefore(app, server, compiler);\n\n      if (nativeMiddleware?.middleware) {\n        app.use(nativeMiddleware.middleware);\n      }\n    };\n  }\n\n  const server = new WebpackDevServer(compiler, config.devServer);\n  // Launch WebpackDevServer.\n  server.listen(port, WebpackEnvironment.HOST, function (this: http.Server, error) {\n    if (nativeMiddleware) {\n      attachNativeDevServerMiddlewareToDevServer(projectRoot, {\n        server: this,\n        ...nativeMiddleware,\n      });\n    }\n    if (error) {\n      ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n    }\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished(error);\n    }\n  });\n\n  webpackDevServerInstance = server;\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n\n  // Extend the close method to ensure that we clean up the local info.\n  const originalClose = server.close.bind(server);\n\n  server.close = (callback?: (err?: Error) => void) => {\n    return originalClose((err?: Error) => {\n      ProjectSettings.setPackagerInfoAsync(projectRoot, {\n        webpackServerPort: null,\n      }).finally(() => {\n        callback?.(err);\n        webpackDevServerInstance = null;\n        webpackServerPort = null;\n      });\n    });\n  };\n\n  return {\n    server,\n    location: {\n      url,\n      port,\n      protocol,\n      host,\n    },\n    // Match the native protocol.\n    messageSocket: {\n      broadcast: broadcastMessage,\n    },\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.close(res);\n      }\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await openProjectAsync(projectRoot);\n}\n\nasync function compileWebAppAsync(projectRoot: string, compiler: webpack.Compiler): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nasync function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  // @ts-ignore\n  if (typeof env.offline !== 'undefined') {\n    throw new Error(\n      'offline support must be added manually: https://expo.fyi/enabling-web-service-workers'\n    );\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await loadConfigAsync(env);\n  await bundleWebAppAsync(projectRoot, config);\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  if (!webpackDevServerInstance) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(options: {\n  host?: string;\n  defaultPort?: number;\n  projectRoot: string;\n}): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort\n        ? options.defaultPort\n        : WebpackEnvironment.DEFAULT_PORT;\n    const port = await choosePortAsync(options.projectRoot, {\n      defaultPort,\n      host: 'host' in options && options.host ? options.host : WebpackEnvironment.HOST,\n    });\n    if (!port) {\n      throw new Error(`Port ${defaultPort} not available.`);\n    }\n    return port;\n  } catch (error: any) {\n    throw new XDLError('NO_PORT_FOUND', error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    logger: ProjectUtils.getLogger(projectRoot),\n    isImageEditingEnabled,\n    mode,\n    https,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error: any) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (WebpackEnvironment.isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Enable line to line mapped mode for all/specified modules.\n    // Line to line mapped mode uses a simple SourceMap where each line of the generated source is mapped to the same line of the original source.\n    // It’s a performance optimization. Only use it if your performance need to be better and you are sure that input lines match which generated lines.\n    // true enables it for all modules (not recommended)\n    output.devtoolLineToLine = true;\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Instead of numeric ids, give modules readable names for better debugging.\n    optimization.namedModules = true;\n    // Instead of numeric ids, give chunks readable names for better debugging.\n    optimization.namedChunks = true;\n    // Readable ids for better debugging.\n    // @ts-ignore Property 'moduleIds' does not exist.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    // @ts-ignore Property 'chunkIds' does not exist.\n    optimization.chunkIds = 'named';\n\n    if (optimization.splitChunks) {\n      optimization.splitChunks.name = true;\n    }\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nasync function loadConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const loadDefaultConfigAsync = require('@expo/webpack-config');\n    config = await loadDefaultConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nasync function openProjectAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowserAsync(url);\n    return { success: true, url };\n  } catch (e: any) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"mappings":"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"}